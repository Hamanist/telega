# Владимир Штефан, [19.02.2023 17:06]
# [В ответ на Практика для 18.0]
# Имеется ряд словарей с пересекающимися ключами (значения - положительные числа). Напишите 2 функции, которые делают с массивом словарей следующие операции:
# 1-ая функция max_dct(*dicts) формирует новый словарь по правилу:
#
# Если в исходных словарях есть повторяющиеся ключи, выбираем среди их значений максимальное и присваиваем этому ключу (например, в словаре_1 есть ключ “а” со значением 5, и в словаре_2 есть ключ “а”, но со значением 9. Выбираем максимальное значение, т. е. 9, и присваиваем ключу “а” в уже новом словаре).
#
# Если ключ не повторяется, то он просто переносится со своим значением в новый словарь (например, ключ “с” встретился только у одного словаря, а у других его нет. Следовательно, переносим в новый словарь этот ключ вместе с его значением). Сформированный словарь возвращаем.
#
# 2-ая функция sum_dct(*dicts) суммирует значения повторяющихся ключей. Значения остальных ключей остаются исходными. (Проводятся операции по аналогу первой функции, но берутся не максимумы, а суммы значений одноименных ключей). Функция возвращает сформированный словарь.
#
# Владимир Штефан, [19.02.2023 17:07]
# [В ответ на Практика для 18.0]
# dict_1 = {1: 12, 2: 33, 3: 10, 4: 10, 5: 2, 6: 90}
# dict_2 = {1: 12, 3: 7, 4: 1, 5: 2, 7: 112}
# dict_3 = {2: 3, 3: 3, 4: 60, 6: 8, 7: 25, 8: 71}
# dict_4 = {3: 1, 4: 13, 5: 31, 9: 9, 10: 556}
#
# Владимир Штефан, [19.02.2023 17:07]
# [В ответ на Практика для 18.0]
# {1: 12, 2: 33, 3: 10, 4: 10, 5: 2, 6: 90, 7: 112}
# {1: 12, 2: 36, 3: 14, 4: 83, 5: 33, 6: 98, 9: 9, 10: 556, 7: 25, 8: 71}
# {1: 12, 2: 33, 3: 10, 4: 60, 5: 31, 6: 90, 7: 112, 8: 71, 9: 9, 10: 556}
# {1: 24, 2: 36, 3: 21, 4: 84, 5: 35, 6: 98, 7: 137, 8: 71, 9: 9, 10: 556}

lst = ['крот', 'белка', 'выхухоль']
lst_max = max(lst, key=len)
len_lst = len(lst_max)
str_lst = ' '.join(lst)
for i in lst:
    print(''.join(i.ljust(len_lst, '_')))